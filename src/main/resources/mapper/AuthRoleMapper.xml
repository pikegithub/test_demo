<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.AuthRoleMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.domain.AuthRole" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="SORT_CODE" property="sortCode" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="IN_WORK_FLOW" property="inWorkFlow" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="SUMMARY" property="summary" jdbcType="VARCHAR" />
    <result column="CREATED_BY" property="createdBy" jdbcType="VARCHAR" />
    <result column="CREATED_TIME" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="UPDATED_BY" property="updatedBy" jdbcType="VARCHAR" />
    <result column="UPDATED_TIME" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from auth_role
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.AuthRole" >
    insert into auth_role (ID, CODE, SORT_CODE, 
      NAME, TYPE, IN_WORK_FLOW, 
      STATUS, SUMMARY, CREATED_BY, 
      CREATED_TIME, UPDATED_BY, UPDATED_TIME
      )
    values (#{id,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{sortCode,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{inWorkFlow,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.AuthRole" >
    update auth_role
    set CODE = #{code,jdbcType=VARCHAR},
      SORT_CODE = #{sortCode,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARCHAR},
      IN_WORK_FLOW = #{inWorkFlow,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      SUMMARY = #{summary,jdbcType=VARCHAR},
      CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select ID, CODE, SORT_CODE, NAME, TYPE, IN_WORK_FLOW, STATUS, SUMMARY, CREATED_BY, 
    CREATED_TIME, UPDATED_BY, UPDATED_TIME
    from auth_role
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultType="com.example.demo.domain.AuthRole">
    select ID, CODE, SORT_CODE, NAME, TYPE, IN_WORK_FLOW, STATUS, SUMMARY, CREATED_BY, 
    CREATED_TIME, UPDATED_BY, UPDATED_TIME
    from auth_role
  </select>
</mapper>